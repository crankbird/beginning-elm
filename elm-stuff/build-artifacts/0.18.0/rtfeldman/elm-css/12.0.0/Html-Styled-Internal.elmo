var _rtfeldman$elm_css$Html_Styled_Internal$classProperty = function (val) {
	return A2(
		_elm_lang$virtual_dom$VirtualDom$property,
		'className',
		_elm_lang$core$Json_Encode$string(val));
};
var _rtfeldman$elm_css$Html_Styled_Internal$containsKey = F2(
	function (key, pairs) {
		containsKey:
		while (true) {
			var _p0 = pairs;
			if (_p0.ctor === '[]') {
				return false;
			} else {
				if (_elm_lang$core$Native_Utils.eq(key, _p0._0._0)) {
					return true;
				} else {
					var _v1 = key,
						_v2 = _p0._1;
					key = _v1;
					pairs = _v2;
					continue containsKey;
				}
			}
		}
	});
var _rtfeldman$elm_css$Html_Styled_Internal$getUnusedKey = F2(
	function ($default, pairs) {
		getUnusedKey:
		while (true) {
			var _p1 = pairs;
			if (_p1.ctor === '[]') {
				return $default;
			} else {
				var _p2 = _p1._1;
				var newKey = A2(_elm_lang$core$Basics_ops['++'], '_', _p1._0._0);
				if (A2(_rtfeldman$elm_css$Html_Styled_Internal$containsKey, newKey, _p2)) {
					var _v4 = newKey,
						_v5 = _p2;
					$default = _v4;
					pairs = _v5;
					continue getUnusedKey;
				} else {
					return newKey;
				}
			}
		}
	});
var _rtfeldman$elm_css$Html_Styled_Internal$class = function (_p3) {
	return A2(
		_elm_lang$virtual_dom$VirtualDom$property,
		'className',
		_elm_lang$core$Json_Encode$string(_p3));
};
var _rtfeldman$elm_css$Html_Styled_Internal$extractProperty = function (_p4) {
	var _p5 = _p4;
	return _p5._0;
};
var _rtfeldman$elm_css$Html_Styled_Internal$accumulateStyles = F2(
	function (_p6, styles) {
		var _p7 = _p6;
		var _p8 = _p7._1;
		return _elm_lang$core$List$isEmpty(_p8) ? styles : A3(_elm_lang$core$Dict$insert, _p7._2, _p8, styles);
	});
var _rtfeldman$elm_css$Html_Styled_Internal$accumulateKeyedStyledHtml = F2(
	function (_p10, _p9) {
		var _p11 = _p10;
		var _p20 = _p11._0;
		var _p12 = _p9;
		var _p19 = _p12._1;
		var _p18 = _p12._0;
		var _p13 = _p11._1;
		switch (_p13.ctor) {
			case 'Unstyled':
				return {
					ctor: '_Tuple2',
					_0: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: _p20, _1: _p13._0},
						_1: _p18
					},
					_1: _p19
				};
			case 'Element':
				var _p15 = _p13._1;
				var combinedStyles = A3(_elm_lang$core$List$foldl, _rtfeldman$elm_css$Html_Styled_Internal$accumulateStyles, _p19, _p15);
				var _p14 = A3(
					_elm_lang$core$List$foldl,
					_rtfeldman$elm_css$Html_Styled_Internal$accumulateStyledHtml,
					{
						ctor: '_Tuple2',
						_0: {ctor: '[]'},
						_1: combinedStyles
					},
					_p13._2);
				var childNodes = _p14._0;
				var finalStyles = _p14._1;
				var vdom = A3(
					_elm_lang$virtual_dom$VirtualDom$node,
					_p13._0,
					A2(_elm_lang$core$List$map, _rtfeldman$elm_css$Html_Styled_Internal$extractProperty, _p15),
					_elm_lang$core$List$reverse(childNodes));
				return {
					ctor: '_Tuple2',
					_0: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: _p20, _1: vdom},
						_1: _p18
					},
					_1: finalStyles
				};
			default:
				var _p17 = _p13._1;
				var combinedStyles = A3(_elm_lang$core$List$foldl, _rtfeldman$elm_css$Html_Styled_Internal$accumulateStyles, _p19, _p17);
				var _p16 = A3(
					_elm_lang$core$List$foldl,
					_rtfeldman$elm_css$Html_Styled_Internal$accumulateKeyedStyledHtml,
					{
						ctor: '_Tuple2',
						_0: {ctor: '[]'},
						_1: combinedStyles
					},
					_p13._2);
				var childNodes = _p16._0;
				var finalStyles = _p16._1;
				var vdom = A3(
					_elm_lang$virtual_dom$VirtualDom$keyedNode,
					_p13._0,
					A2(_elm_lang$core$List$map, _rtfeldman$elm_css$Html_Styled_Internal$extractProperty, _p17),
					_elm_lang$core$List$reverse(childNodes));
				return {
					ctor: '_Tuple2',
					_0: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: _p20, _1: vdom},
						_1: _p18
					},
					_1: finalStyles
				};
		}
	});
var _rtfeldman$elm_css$Html_Styled_Internal$accumulateStyledHtml = F2(
	function (html, _p21) {
		var _p22 = _p21;
		var _p29 = _p22._1;
		var _p28 = _p22._0;
		var _p23 = html;
		switch (_p23.ctor) {
			case 'Unstyled':
				return {
					ctor: '_Tuple2',
					_0: {ctor: '::', _0: _p23._0, _1: _p28},
					_1: _p29
				};
			case 'Element':
				var _p25 = _p23._1;
				var combinedStyles = A3(_elm_lang$core$List$foldl, _rtfeldman$elm_css$Html_Styled_Internal$accumulateStyles, _p29, _p25);
				var _p24 = A3(
					_elm_lang$core$List$foldl,
					_rtfeldman$elm_css$Html_Styled_Internal$accumulateStyledHtml,
					{
						ctor: '_Tuple2',
						_0: {ctor: '[]'},
						_1: combinedStyles
					},
					_p23._2);
				var childNodes = _p24._0;
				var finalStyles = _p24._1;
				var vdom = A3(
					_elm_lang$virtual_dom$VirtualDom$node,
					_p23._0,
					A2(_elm_lang$core$List$map, _rtfeldman$elm_css$Html_Styled_Internal$extractProperty, _p25),
					_elm_lang$core$List$reverse(childNodes));
				return {
					ctor: '_Tuple2',
					_0: {ctor: '::', _0: vdom, _1: _p28},
					_1: finalStyles
				};
			default:
				var _p27 = _p23._1;
				var combinedStyles = A3(_elm_lang$core$List$foldl, _rtfeldman$elm_css$Html_Styled_Internal$accumulateStyles, _p29, _p27);
				var _p26 = A3(
					_elm_lang$core$List$foldl,
					_rtfeldman$elm_css$Html_Styled_Internal$accumulateKeyedStyledHtml,
					{
						ctor: '_Tuple2',
						_0: {ctor: '[]'},
						_1: combinedStyles
					},
					_p23._2);
				var childNodes = _p26._0;
				var finalStyles = _p26._1;
				var vdom = A3(
					_elm_lang$virtual_dom$VirtualDom$keyedNode,
					_p23._0,
					A2(_elm_lang$core$List$map, _rtfeldman$elm_css$Html_Styled_Internal$extractProperty, _p27),
					_elm_lang$core$List$reverse(childNodes));
				return {
					ctor: '_Tuple2',
					_0: {ctor: '::', _0: vdom, _1: _p28},
					_1: finalStyles
				};
		}
	});
var _rtfeldman$elm_css$Html_Styled_Internal$murmurSeed = 15739;
var _rtfeldman$elm_css$Html_Styled_Internal$makeSnippet = F2(
	function (styles, sequence) {
		var selector = A3(
			_rtfeldman$elm_css$Css_Structure$Selector,
			sequence,
			{ctor: '[]'},
			_elm_lang$core$Maybe$Nothing);
		return _rtfeldman$elm_css$Css_Preprocess$Snippet(
			{
				ctor: '::',
				_0: _rtfeldman$elm_css$Css_Preprocess$StyleBlockDeclaration(
					A3(
						_rtfeldman$elm_css$Css_Preprocess$StyleBlock,
						selector,
						{ctor: '[]'},
						styles)),
				_1: {ctor: '[]'}
			});
	});
var _rtfeldman$elm_css$Html_Styled_Internal$snippetFromPair = function (_p30) {
	var _p31 = _p30;
	return A2(
		_rtfeldman$elm_css$Html_Styled_Internal$makeSnippet,
		_p31._1,
		_rtfeldman$elm_css$Css_Structure$UniversalSelectorSequence(
			{
				ctor: '::',
				_0: _rtfeldman$elm_css$Css_Structure$ClassSelector(_p31._0),
				_1: {ctor: '[]'}
			}));
};
var _rtfeldman$elm_css$Html_Styled_Internal$toDeclaration = function (dict) {
	return function (_) {
		return _.css;
	}(
		_rtfeldman$elm_css$Css_Preprocess_Resolve$compile(
			_elm_lang$core$List$singleton(
				_rtfeldman$elm_css$Css_Preprocess$stylesheet(
					A2(
						_elm_lang$core$List$map,
						_rtfeldman$elm_css$Html_Styled_Internal$snippetFromPair,
						_elm_lang$core$Dict$toList(dict))))));
};
var _rtfeldman$elm_css$Html_Styled_Internal$toStyleNode = function (styles) {
	return A3(
		_elm_lang$virtual_dom$VirtualDom$node,
		'style',
		{ctor: '[]'},
		_elm_lang$core$List$singleton(
			_elm_lang$virtual_dom$VirtualDom$text(
				_rtfeldman$elm_css$Html_Styled_Internal$toDeclaration(styles))));
};
var _rtfeldman$elm_css$Html_Styled_Internal$unstyle = F3(
	function (elemType, attributes, children) {
		var properties = A2(_elm_lang$core$List$map, _rtfeldman$elm_css$Html_Styled_Internal$extractProperty, attributes);
		var initialStyles = A3(_elm_lang$core$List$foldl, _rtfeldman$elm_css$Html_Styled_Internal$accumulateStyles, _elm_lang$core$Dict$empty, attributes);
		var _p32 = A3(
			_elm_lang$core$List$foldl,
			_rtfeldman$elm_css$Html_Styled_Internal$accumulateStyledHtml,
			{
				ctor: '_Tuple2',
				_0: {ctor: '[]'},
				_1: initialStyles
			},
			children);
		var childNodes = _p32._0;
		var styles = _p32._1;
		var styleNode = _rtfeldman$elm_css$Html_Styled_Internal$toStyleNode(styles);
		return A3(
			_elm_lang$virtual_dom$VirtualDom$node,
			elemType,
			properties,
			{
				ctor: '::',
				_0: styleNode,
				_1: _elm_lang$core$List$reverse(childNodes)
			});
	});
var _rtfeldman$elm_css$Html_Styled_Internal$toKeyedStyleNode = F2(
	function (allStyles, keyedChildNodes) {
		var finalNode = _rtfeldman$elm_css$Html_Styled_Internal$toStyleNode(allStyles);
		var styleNodeKey = A2(_rtfeldman$elm_css$Html_Styled_Internal$getUnusedKey, '_', keyedChildNodes);
		return {ctor: '_Tuple2', _0: styleNodeKey, _1: finalNode};
	});
var _rtfeldman$elm_css$Html_Styled_Internal$unstyleKeyed = F3(
	function (elemType, attributes, keyedChildren) {
		var properties = A2(_elm_lang$core$List$map, _rtfeldman$elm_css$Html_Styled_Internal$extractProperty, attributes);
		var initialStyles = A3(_elm_lang$core$List$foldl, _rtfeldman$elm_css$Html_Styled_Internal$accumulateStyles, _elm_lang$core$Dict$empty, attributes);
		var _p33 = A3(
			_elm_lang$core$List$foldl,
			_rtfeldman$elm_css$Html_Styled_Internal$accumulateKeyedStyledHtml,
			{
				ctor: '_Tuple2',
				_0: {ctor: '[]'},
				_1: initialStyles
			},
			keyedChildren);
		var keyedChildNodes = _p33._0;
		var styles = _p33._1;
		var keyedStyleNode = A2(_rtfeldman$elm_css$Html_Styled_Internal$toKeyedStyleNode, styles, keyedChildNodes);
		return A3(
			_elm_lang$virtual_dom$VirtualDom$keyedNode,
			elemType,
			properties,
			{
				ctor: '::',
				_0: keyedStyleNode,
				_1: _elm_lang$core$List$reverse(keyedChildNodes)
			});
	});
var _rtfeldman$elm_css$Html_Styled_Internal$getClassname = function (styles) {
	return _elm_lang$core$List$isEmpty(styles) ? '' : A2(
		_elm_lang$core$String$cons,
		_elm_lang$core$Native_Utils.chr('_'),
		_rtfeldman$hex$Hex$toString(
			A2(
				_Skinney$murmur3$Murmur3$hashString,
				_rtfeldman$elm_css$Html_Styled_Internal$murmurSeed,
				function (_) {
					return _.css;
				}(
					_rtfeldman$elm_css$Css_Preprocess_Resolve$compile(
						_elm_lang$core$List$singleton(
							_rtfeldman$elm_css$Css_Preprocess$stylesheet(
								_elm_lang$core$List$singleton(
									A2(
										_rtfeldman$elm_css$Html_Styled_Internal$makeSnippet,
										styles,
										_rtfeldman$elm_css$Css_Structure$UniversalSelectorSequence(
											{ctor: '[]'}))))))))));
};
var _rtfeldman$elm_css$Html_Styled_Internal$Unstyled = function (a) {
	return {ctor: 'Unstyled', _0: a};
};
var _rtfeldman$elm_css$Html_Styled_Internal$KeyedElement = F3(
	function (a, b, c) {
		return {ctor: 'KeyedElement', _0: a, _1: b, _2: c};
	});
var _rtfeldman$elm_css$Html_Styled_Internal$Element = F3(
	function (a, b, c) {
		return {ctor: 'Element', _0: a, _1: b, _2: c};
	});
var _rtfeldman$elm_css$Html_Styled_Internal$InternalAttribute = F3(
	function (a, b, c) {
		return {ctor: 'InternalAttribute', _0: a, _1: b, _2: c};
	});
var _rtfeldman$elm_css$Html_Styled_Internal$mapAttribute = F2(
	function (transform, _p34) {
		var _p35 = _p34;
		return A3(
			_rtfeldman$elm_css$Html_Styled_Internal$InternalAttribute,
			A2(_elm_lang$virtual_dom$VirtualDom$mapProperty, transform, _p35._0),
			_p35._1,
			_p35._2);
	});
